@{
    var orderNum = "";
    var customer = "";
    var dateOrdered = "";
    int deskWidth;
    var deskWidthEntered = "";
    int deskLength;
    var deskLengthEntered = "";
    int drawers;
    var drawersEntered = "";
    var material = "";
    var rushEntered = "";
    int rush;
    var totalEntered = "";
    decimal total;
    var orderId = "";
    int orderIdInt;

    if (!IsPost)
    {
        if (!Request.QueryString["deskOrderID"].IsEmpty() && Request.QueryString["deskOrderID"].IsInt())
        {
            orderId = Request.QueryString["deskOrderID"];
            var db = Database.Open("NavajaDeskOrders");
            var dbCommand = "SELECT * FROM deskorder WHERE deskOrderID = @0";
            var row = db.QuerySingle(dbCommand, orderId);

            if (row != null)
            {
                orderNum = row.orderNumber.ToString();
                customer = row.name;
                dateOrdered = row.orderDate.ToString();
                deskWidthEntered = row.width.ToString();
                deskLengthEntered = row.length.ToString();
                drawersEntered = row.numDrawer.ToString();
                material = row.materialType;
                rushEntered = row.fk_rushOrderID.ToString();
                totalEntered = row.totalPrice.ToString();
            }
            else {
                Validation.AddFormError("No order was found for that ID.");
            }
        }
        else {
            Validation.AddFormError("No order was found for that ID.");
        }
    }

    if (IsPost)
    {

        Validation.RequireField("customer", "Customer Name is required");
        Validation.RequireField("deskWidthEntered", "Width is required");
        Validation.RequireField("deskLengthEntered", "Length is required");
        Validation.RequireField("drawersEntered", "Number of drawers is required");
        Validation.RequireField("material", "Material is required");
        Validation.RequireField("rushEntered", "Rush Order Option is required");

        customer = Request.Form["customer"];

        deskWidthEntered = Request.Form["deskWidthEntered"];
        deskWidth = deskWidthEntered.AsInt();

        deskLengthEntered = Request.Form["deskLengthEntered"];
        deskLength = deskLengthEntered.AsInt();

        drawersEntered = Request.Form["drawersEntered"];
        drawers = drawersEntered.AsInt();

        material = Request.Form["material"];

        rushEntered = Request.Form["rushEntered"];
        rush = rushEntered.AsInt();

        totalEntered = Request.Form["totalEntered"];
        total = totalEntered.AsDecimal();

        orderIdInt = orderId.AsInt();

        if (Validation.IsValid())
        {
            var db = Database.Open("NavajaDeskOrders");
            var updateCommand = "UPDATE deskorder SET width=@0, length=@1, numDrawer=@2, materialType=@3, name=@4, orderDate=@5 WHERE deskOrderID=@6";
            db.Execute(updateCommand, deskWidth, deskLength, drawers, material, customer, DateTime.Now, orderIdInt);
            Response.Redirect("~/NavajaDesksHome");
        }
    }
}
<!DOCTYPE html>
<html>
<head>
    <title>Edit Order</title>
</head>
<body>
    <h1>Edit Order</h1>
    @Html.ValidationSummary()
    <p><a href="~/NavajaDesksHome">Return to Orders</a></p>

    <form method="post">
        <fieldset>
            <legend>Order Details</legend>

            <p>
                <label>Order Number:</label>
                <span>@orderNum</span> @*readonly*@
            </p>

            <p>
                <label>Date Created:</label>
                <span>@dateOrdered</span>
            </p>

            <p>
                <label>Customer Name:</label>
                <input type="text" name="customer" value="@customer" />
            </p>


            <p>
                <label>Desk Width:</label>
                <input type="text" name="deskWidthEntered" value="@deskWidthEntered" />

            </p>

            <p>
                <label>Desk Length:</label>
                <input type="text" name="deskLengthEntered" value="@deskLengthEntered" />

            </p>

            <p>
                <label>Number of Drawers:</label>
                <input type="text" name="drawersEntered" value="@drawersEntered" />

            </p>

            <p>
                <label>Desk Material:</label>
                <input type="text" name="material" value="@material" />
         
            </p>

            <p>
                <label>Rush Order Option:</label>
                <input type="text" name="rushEntered" value="@rushEntered" />
            </p>

            <p>
                <label>Total Price:</label>
                <span>@totalEntered</span> @*readonly (we need to caculate this after a change)*@
            </p>

            <input type="hidden" name="orderid" value="@orderId" />
            <p><input type="submit" name="buttonEdit" value="Edit Order" /></p>
        </fieldset>
    </form>
</body>
</html>