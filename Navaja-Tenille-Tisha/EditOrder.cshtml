@{
    var orderNum = "";
    var customer = "";
    var dateOrdered = "";
    var lastUpdated = "";
    int deskWidth;
    var deskWidthEntered = "";
    int deskLength;
    var deskLengthEntered = "";
    int drawers;
    var drawersEntered = "";
    var material = "";
    var rushEntered = "";
    int rush;
    var totalEntered = "";
    decimal total;
    var orderId = "";
    int orderIdInt;
    string materialPic = "";
    decimal basePrice = 200;

    if (!IsPost)
    {
        if (!Request.QueryString["deskOrderID"].IsEmpty() && Request.QueryString["deskOrderID"].IsInt())
        {
            orderId = Request.QueryString["deskOrderID"];
            var db = Database.Open("NavajaDeskOrders");
            var dbCommand = "SELECT * FROM deskorder WHERE deskOrderID = @0";
            var row = db.QuerySingle(dbCommand, orderId);

            if (row != null)
            {
                orderNum = row.orderNumber.ToString();
                customer = row.name;
                dateOrdered = row.orderDate.ToString();
                lastUpdated = row.dateModified.ToString();
                deskWidthEntered = row.width.ToString();
                deskLengthEntered = row.length.ToString();
                drawersEntered = row.numDrawer.ToString();
                material = row.materialType;
                rushEntered = row.fk_rushOrderID.ToString();
                totalEntered = row.totalPrice.ToString();

                switch (material)
                {
                    case "Pine":
                        materialPic = "images/pine-sample.jpg";
                        break;
                    case "Oak":
                        materialPic = "images/oak_sample.jpg";
                        break;
                    case "Maple":
                        materialPic = "images/maple-sample.jpg";
                        break;
                    case "Ash":
                        materialPic = "images/ash-sample.jpg";
                        break;
                    case "Cherry":
                        materialPic = "images/cherry-sample.jpg";
                        break;
                    case "Birch":
                        materialPic = "images/birch-sample.jpg";
                        break;
                }
            }
            else {
                Validation.AddFormError("No order was found for that ID.");
            }
        }
        else {
            Validation.AddFormError("No order was found for that ID.");
        }
    }


        if (IsPost)
        {

            Validation.RequireField("customer", "Customer Name is required");
            Validation.RequireField("deskWidthEntered", "Width is required");
            Validation.RequireField("deskLengthEntered", "Length is required");
            Validation.RequireField("drawersEntered", "Number of drawers is required");
            Validation.RequireField("material", "Material is required");
            Validation.RequireField("rushEntered", "Rush Order Option is required");

            customer = Request.Form["customer"];

            deskWidthEntered = Request.Form["deskWidthEntered"];
            deskWidth = deskWidthEntered.AsInt();

            deskLengthEntered = Request.Form["deskLengthEntered"];
            deskLength = deskLengthEntered.AsInt();

            //calculate dimensions
            int deskDimensions = deskLength * deskWidth;
            decimal dimensionPrice;  //Use this in final calculation


            if (deskDimensions > 1000)
            {
                int extraDeskSize = deskDimensions - 1000;
                dimensionPrice = extraDeskSize * 5;
            }
            else
            {
                dimensionPrice = 0;
            }

            drawersEntered = Request.Form["drawersEntered"];
            drawers = drawersEntered.AsInt();

            //calculate drawers
            int drawerPrice = 50;
            var drawerSelectionPrice = drawerPrice * drawers;  //Use this in final calculation


            material = Request.Form["material"]; //Oak -200, Cherry - 150, Birch - 125,  Maple - 100, Ash - 75, Pine - 50
            decimal materialPrice; //Use this in final calc

            switch (material)
            {
                case "Oak":
                    materialPrice = 200;
                    break;

                case "Cherry":
                    materialPrice = 150;
                    break;

                case "Birch":
                    materialPrice = 125;
                    break;

                case "Maple":
                    materialPrice = 100;
                    break;

                case "Ash":
                    materialPrice = 75;
                    break;

                case "Pine":
                    materialPrice = 50;
                    break;

            }

            rushEntered = Request.Form["rushEntered"];
            rush = rushEntered.AsInt();
            String deskShirtSize;

            if (deskDimensions < 1000)
            {
                deskShirtSize = "small";
            }
            else if (deskDimensions <= 1999)
            {
                deskShirtSize = "medium";
            }
            else
            {
                deskShirtSize = "large";
            }

            var db = Database.Open("NavajaDeskOrders");
            var selectCommand = "SELECT rushOrderPrice FROM rushOrder WHERE numDay = @0 AND deskSize = @1";
            decimal rushPrice = db.QueryValue(selectCommand, rush, deskShirtSize);


            total = basePrice + drawerPrice + dimensionPrice + rushPrice;

            orderId = Request.QueryString["deskOrderID"];
            orderIdInt = orderId.AsInt();

            if (Validation.IsValid())
            {
                db = Database.Open("NavajaDeskOrders");
                var updateCommand = "UPDATE deskorder SET width=@0, length=@1, numDrawer=@2, materialType=@3, name=@4, dateModified=@5, totalPrice=@6, fk_rushOrderID=@7 WHERE deskOrderID=@8";
                db.Execute(updateCommand, deskWidth, deskLength, drawers, material, customer, DateTime.Now, total, rush, orderIdInt);
                Response.Redirect("~/NavajaDesksHome");
            }
        }
    }
<!DOCTYPE html>
<html>
<head>
    <title>Edit Order</title>
    <link href="~/styles/bootstrap.css" rel="stylesheet" />
</head>
<body>
    @RenderPage("~/Shared/_Navigation.cshtml")
        <header class="jumbotron">
            <h1 class="text-center text-uppercase">Edit Order</h1>
        </header>
          
    <div class="container">
            @Html.ValidationSummary()

        <p><a href="~/NavajaDesksHome">Return to Orders</a></p>
        <form method="post">
            <fieldset class="form-group">
                <legend class="col-form-legend">Order Details</legend>

                <div class="form-group row">
                    <label class="col-sm-2 col-form-label">Order Number:</label>
                    <div class="col-sm-10">
                        <input class="form-control" type="text" name="orderNum" value="@orderNum" readonly />
                    </div>
                </div>

                <div class="form-group row">
                    <label class="col-sm-2 col-form-label">Date Created:</label>
                    <div class="col-sm-4">
                        <input class="form-control" type="text" name="dateCreated" value="@dateOrdered" readonly />
                    </div>
                    <label class="col-sm-2 col-form-label">Last Updated:</label>
                    <div class="col-sm-4">
                        <input class="form-control" type="text" name="dateCreated" value="@lastUpdated" readonly />
                    </div>
                </div>

                <div class="form-group row">
                    <label class="col-sm-2 col-form-label">Customer Name:</label>
                    <div class="col-sm-10">
                        <input class="form-control" type="text" name="customer" value="@customer" />
                    </div>
                </div>


                <div class="form-group row">
                    <label class="col-sm-2 col-form-label">Desk Width:</label>
                    <div class="col-sm-10">
                        <select class="form-control" name="deskWidthEntered">
                            <option value="@deskWidthEntered" selected>@deskWidthEntered</option>
                            <option value="24">24</option>
                            <option value="28">28</option>
                            <option value="32">32</option>
                            <option value="36">36</option>
                            <option value="40">40</option>
                            <option value="44">44</option>
                            <option value="48">48</option>
                            <option value="52">52</option>
                            <option value="56">56</option>
                            <option value="60">60</option>
                        </select>

                    </div>
                </div>

                <div class="form-group row">
                    <label class="col-sm-2 col-form-label">Desk Length:</label>
                    <div class="col-sm-10">
                        <select class="form-control" name="deskLengthEntered">
                            <option value="@deskLengthEntered" selected>@deskLengthEntered</option>
                            <option value="24">24</option>
                            <option value="28">28</option>
                            <option value="32">32</option>
                            <option value="36">36</option>
                            <option value="40">40</option>
                            <option value="44">44</option>
                            <option value="48">48</option>
                            <option value="52">52</option>
                            <option value="56">56</option>
                            <option value="60">60</option>
                        </select>
                    </div>
                </div>

                <div class="form-group row">
                    <label class="col-sm-2 col-form-label">Number of Drawers:</label>
                    <div class="col-sm-10">
                        <select class="form-control" name="drawersEntered">
                            <option value="@drawersEntered" selected>@drawersEntered</option>
                            <option value="0">0 - $0</option>
                            <option value="1">1 - $50</option>
                            <option value="2">2 - $100</option>
                            <option value="3">3 - $150</option>
                            <option value="4">4 - $200</option>
                            <option value="5">5 - $250</option>
                            <option value="6">6 - $300</option>
                            <option value="7">7 - $350</option>
                        </select> 

                    </div>
                </div>

                <div class="form-group row">
                    <label class="col-sm-2 col-form-label">Desk Material:</label>
                    <div class="col-sm-8">                        
                            <select class="form-control" name="material">
                                <option value="@material" selected>@material</option>
                                <option value="Pine">Pine</option>
                                <option value="Oak">Oak</option>
                                <option value="Maple">Maple</option>
                                <option value="Ash">Ash</option>
                                <option value="Cherry">Cherry</option>
                                <option value="Birch">Birch</option>
                            </select>                        
                    </div>
                    <div class="col-sm-2">
                        <img class="img-rounded" src="@materialPic" width="95" height="45" />
                    </div>
                </div>

                <div class="form-group row">
                    <label class="col-sm-2 col-form-label">Rush Order Option:</label>
                    <div class="col-sm-10">
                        <select class="form-control" name="rushEntered">
                            <option class="disabled" value="@rushEntered" selected>@rushEntered</option>
                            <option value="0">0</option>
                            <option value="3">3</option>
                            <option value="5">5</option>
                            <option value="7">7</option>                            
                        </select>  
                    </div>
                </div>

                <div class="form-group row">
                    <label class="col-sm-2 col-form-label">Total Price:</label>
                    <div class="col-sm-10">
                        <input class="form-control" type="text" name="totalEntered" value="$@totalEntered" readonly /> @*readonly (we need to caculate this after a change)*@
                    </div>
                </div>

                <input type="hidden" name="orderid" value="@orderId" />
                </fieldset>
                <div class="form-group row">
                    <label class="col-sm-2 col-form-label"></label>
                    <div class="col-sm-10">
                        <button class="btn btn-primary btn-lg btn-block" type="submit" name="buttonEdit" value="Edit Order" >Edit Order</button>
                    </div>
                </div>
            
        </form>
    </div>
    @RenderPage("~/Shared/_Footer.cshtml")
</body>
</html>