@{
    var orderNum = "";
    var customer = "";
    var dateOrdered = "";
    var lastUpdated = "";
    int deskWidth;
    var deskWidthEntered = "";
    int deskLength;
    var deskLengthEntered = "";
    int drawers;
    var drawersEntered = "";
    var material = "";
    var rushEntered = "";
    int rush;
    var totalEntered = "";
    decimal total;
    var orderId = "";
    int orderIdInt;
    string materialPic = "";

    if (!IsPost)
    {
        if (!Request.QueryString["deskOrderID"].IsEmpty() && Request.QueryString["deskOrderID"].IsInt())
        {
            orderId = Request.QueryString["deskOrderID"];
            var db = Database.Open("NavajaDeskOrders");
            var dbCommand = "SELECT * FROM deskorder WHERE deskOrderID = @0";
            var row = db.QuerySingle(dbCommand, orderId);

            if (row != null)
            {
                orderNum = row.orderNumber.ToString();
                customer = row.name;
                dateOrdered = row.orderDate.ToString();
                lastUpdated = row.dateModified.ToString();
                deskWidthEntered = row.width.ToString();
                deskLengthEntered = row.length.ToString();
                drawersEntered = row.numDrawer.ToString();
                material = row.materialType;
                rushEntered = row.fk_rushOrderID.ToString();
                totalEntered = row.totalPrice.ToString();

                switch (material)
                {
                    case "Pine":
                        materialPic = "images/pine-sample.jpg";
                        break;
                    case "Oak":
                        materialPic = "images/oak_sample.jpg";
                        break;
                    case "Maple":
                        materialPic = "images/maple-sample.jpg";
                        break;
                    case "Ash":
                        materialPic = "images/ash-sample.jpg";
                        break;
                    case "Cherry":
                        materialPic = "images/cherry-sample.jpg";
                        break;
                    case "Birch":
                        materialPic = "images/birch-sample.jpg";
                        break;
                }
            }
            else {
                Validation.AddFormError("No order was found for that ID.");
            }
        }
        else {
            Validation.AddFormError("No order was found for that ID.");
        }
    }

    if (IsPost)
    {

        Validation.RequireField("customer", "Customer Name is required");
        Validation.RequireField("deskWidthEntered", "Width is required");
        Validation.RequireField("deskLengthEntered", "Length is required");
        Validation.RequireField("drawersEntered", "Number of drawers is required");
        Validation.RequireField("material", "Material is required");
        Validation.RequireField("rushEntered", "Rush Order Option is required");

        customer = Request.Form["customer"];

        deskWidthEntered = Request.Form["deskWidthEntered"];
        deskWidth = deskWidthEntered.AsInt();

        deskLengthEntered = Request.Form["deskLengthEntered"];
        deskLength = deskLengthEntered.AsInt();

        drawersEntered = Request.Form["drawersEntered"];
        drawers = drawersEntered.AsInt();

        material = Request.Form["material"];

        rushEntered = Request.Form["rushEntered"];
        rush = rushEntered.AsInt();

        //totalEntered = Request.Form["totalEntered"];  //Need to do something different here to recalculate the total based on changes to certain fields
        //total = totalEntered.AsDecimal();

        orderId = Request.QueryString["deskOrderID"];
        orderIdInt = orderId.AsInt();

        if (Validation.IsValid())
        {
            var db = Database.Open("NavajaDeskOrders");
            var updateCommand = "UPDATE deskorder SET width=@0, length=@1, numDrawer=@2, materialType=@3, name=@4, dateModified=@5 WHERE deskOrderID=@6";
            db.Execute(updateCommand, deskWidth, deskLength, drawers, material, customer, DateTime.Now, orderIdInt);
            Response.Redirect("~/NavajaDesksHome");
        }
    }
    }
<!DOCTYPE html>
<html>
<head>
    <title>Edit Order</title>
    <link href="~/styles/bootstrap.css" rel="stylesheet" />
</head>
<body>
    @RenderPage("~/Shared/_Navigation.cshtml")
        <header class="jumbotron">
            <h1 class="text-center text-uppercase">Edit Order</h1>
        </header>
          
    <div class="container">
        @Html.ValidationSummary()
        <p><a href="~/NavajaDesksHome">Return to Orders</a></p>
        <form method="post">
            <fieldset class="form-group">
                <legend class="col-form-legend">Order Details</legend>

                <div class="form-group row">
                    <label class="col-sm-2 col-form-label">Order Number:</label>
                    <div class="col-sm-10">
                        <input class="form-control" type="text" name="orderNum" value="@orderNum" readonly />
                    </div>
                </div>

                <div class="form-group row">
                    <label class="col-sm-2 col-form-label">Date Created:</label>
                    <div class="col-sm-4">
                        <input class="form-control" type="text" name="dateCreated" value="@dateOrdered" readonly />
                    </div>
                    <label class="col-sm-2 col-form-label">Last Updated:</label>
                    <div class="col-sm-4">
                        <input class="form-control" type="text" name="dateCreated" value="@dateOrdered" readonly />
                    </div>
                </div>

                <div class="form-group row">
                    <label class="col-sm-2 col-form-label">Customer Name:</label>
                    <div class="col-sm-10">
                        <input class="form-control" type="text" name="customer" value="@customer" />
                    </div>
                </div>


                <div class="form-group row">
                    <label class="col-sm-2 col-form-label">Desk Width:</label>
                    <div class="col-sm-10">
                        <input class="form-control" type="text" name="deskWidthEntered" value="@deskWidthEntered" />

                    </div>
                </div>

                <div class="form-group row">
                    <label class="col-sm-2 col-form-label">Desk Length:</label>
                    <div class="col-sm-10">
                        <input class="form-control" type="text" name="deskLengthEntered" value="@deskLengthEntered" />
                    </div>
                </div>

                <div class="form-group row">
                    <label class="col-sm-2 col-form-label">Number of Drawers:</label>
                    <div class="col-sm-10">
                        <input class="form-control" type="text" name="drawersEntered" value="@drawersEntered" />

                    </div>
                </div>

                <div class="form-group row">
                    <label class="col-sm-2 col-form-label">Desk Material:</label>
                    <div class="col-sm-8">
                        <input class="form-control" type="text" name="material" value="@material" />
                        
                    </div>
                    <div class="col-sm-2">
                        <img class="img-rounded" src="@materialPic" width="95" height="45" />
                    </div>
                </div>

                <div class="form-group row">
                    <label class="col-sm-2 col-form-label">Rush Order Option:</label>
                    <div class="col-sm-10">
                        <input class="form-control" type="text" name="rushEntered" value="@rushEntered" />
                    </div>
                </div>

                <div class="form-group row">
                    <label class="col-sm-2 col-form-label">Total Price:</label>
                    <div class="col-sm-10">
                        <input class="form-control" type="text" name="totalEntered" value="$@totalEntered" readonly /> @*readonly (we need to caculate this after a change)*@
                    </div>
                </div>

                <input type="hidden" name="orderid" value="@orderId" />
                </fieldset>
                <div class="form-group row">
                    <label class="col-sm-2 col-form-label"></label>
                    <div class="col-sm-10">
                        <button class="btn btn-primary btn-lg btn-block" type="submit" name="buttonEdit" value="Edit Order" >Edit Order</button>
                    </div>
                </div>
            
        </form>
    </div>
    @RenderPage("~/Shared/_Footer.cshtml")
</body>
</html>